{"version":3,"sources":["components/common/addvertise.jsx","utils/auth.js","utils/post.js","components/common/post.jsx","components/post_lists.jsx","components/home.jsx","components/appbar.jsx","components/common/form.jsx","components/common/input.jsx","components/loginForm.jsx","components/registerForm.jsx","components/logout.jsx","components/dashboard.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Advertise","id","Card","style","width","Body","Title","Subtitle","className","Text","Link","href","register","data","allRegisteredUsers","users","localStorage","getItem","JSON","parse","generateId","email","setItem","stringify","login","allUsers","user","userData","password","console","log","ex","message","getLoggedUser","Math","random","toString","substring","addPost","post","allPost","getAllPosts","push","getUserPosts","allPosts","posts","_","isEmpty","item","reverse","Post","Fragment","Header","as","title","body","name","PostList","state","showAdvertise","i","this","setState","Row","Col","sm","md","Object","keys","map","key","Container","Component","Home","Jumbotron","to","variant","Appbar","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","NavDropdown","Divider","CustomForm","errors","validate","error","Joi","schema","abortEarly","details","path","validateProperty","value","obj","handleSubmit","e","preventDefault","doSubmit","handleChange","input","currentTarget","errorMessage","Input","lable","type","rest","Form","Group","controlId","Label","Control","LoginForm","string","label","required","min","max","result","window","location","span","offset","onSubmit","onChange","placeholder","username","Button","disabled","Footer","RegisterForm","regex","props","history","replace","Logout","removeItem","Dashboard","showModal","Date","now","renderModal","Modal","show","size","onHide","aria-labelledby","centered","closeButton","block","ButtonToolbar","onClick","ProtectedRoute","component","render","showOnUser","isUser","App","exact","Boolean","hostname","match","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.174b7599.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Advertise = ({ id }) => {\r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n            <Card.Body>\r\n                <Card.Title>Advertise #{id}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">ignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui</Card.Subtitle>\r\n                <Card.Text>\r\n                    Some quick example text to build on the card title and make up the bulk of\r\n                    the card's content.\r\n                </Card.Text>\r\n                <Card.Link href=\"#\">Read More</Card.Link>\r\n                <Card.Link href=\"#\">Click to buy</Card.Link>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Advertise;","import _ from 'lodash';\r\n\r\nexport const register = (data) => {\r\n    if (!data) return false;\r\n\r\n    let allRegisteredUsers = {};\r\n    \r\n    let users =  localStorage.getItem('registeredUsers');\r\n    if(users){\r\n       users =  JSON.parse(users);\r\n       allRegisteredUsers = users;\r\n    }\r\n\r\n    data['id'] = generateId();\r\n    allRegisteredUsers[data.email] = data;\r\n\r\n    \r\n    localStorage.setItem('registeredUsers', JSON.stringify(allRegisteredUsers));\r\n    return true;\r\n\r\n}\r\n\r\nexport const login = (data) => {\r\n    if(!data) return false;\r\n\r\n    try {\r\n        const allUsers = JSON.parse(localStorage.getItem('registeredUsers'));\r\n\r\n        \r\n        for(let user in allUsers){\r\n            const userData = allUsers[user];     \r\n            if( data.email === userData.email && data.password === userData.password ) {\r\n                console.log(\"checking\");\r\n                localStorage.setItem('loggedUser' , JSON.stringify(userData));\r\n                return true;\r\n            }    \r\n        }\r\n    } catch(ex) {\r\n        console.log(ex.message);\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport const logout = () => {\r\n    const loggedUser = JSON.parse(localStorage.getItem('loggedUser'));\r\n    if(!loggedUser) return false;\r\n\r\n    localStorage.removeItem('loggedUser');\r\n    return true;\r\n}\r\n\r\n\r\nexport const getLoggedUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"loggedUser\"));\r\n}\r\n\r\n\r\nconst generateId = () => Math.random().toString(36).substring(7);\r\n","import _ from 'lodash';\r\nimport { getLoggedUser } from './auth';\r\n\r\n\r\nexport const addPost = (post) => {\r\n    if (!post) return false;\r\n\r\n    const allPost = getAllPosts() || [];\r\n    post.id = generateId();\r\n    allPost.push(post);\r\n\r\n    localStorage.setItem('postsData' , JSON.stringify(allPost));\r\n\r\n    return true;\r\n}\r\n\r\nexport const getUserPosts = () => {\r\n    const user = getLoggedUser();\r\n    const allPosts = getAllPosts();\r\n    let posts=[]\r\n    if ( !_.isEmpty(allPosts)){\r\n        for (let item in allPosts){\r\n            let post = allPosts[item];\r\n           if ( post.user.id === user.id ){\r\n            posts.push(post);\r\n            }\r\n        }\r\n    } \r\n    console.log(posts);\r\n    return posts;\r\n}\r\n\r\nexport const getAllPosts = () => {\r\n    const posts = JSON.parse(localStorage.getItem('postsData'));\r\n    return _.isEmpty(posts) ? null : posts.reverse();\r\n}\r\n\r\nconst generateId = () => Math.random().toString(36).substring(9);","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst Post = ({post}) => {\r\n    return (\r\n        <React.Fragment>\r\n        <Card>\r\n            <Card.Header as=\"h5\">{post.title}</Card.Header>\r\n            <Card.Body>\r\n                <blockquote className=\"blockquote mb-0\">\r\n                <p>\r\n                    {' '}\r\n                    {post.body}{' '}\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                    Created By <cite title=\"Source Title\">{post.user.name}</cite>\r\n                </footer>\r\n                </blockquote>\r\n            </Card.Body>\r\n        </Card>\r\n        <br/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Advertise from './common/addvertise';\r\nimport {getAllPosts} from '../utils/post';\r\nimport Post from './common/post';\r\nimport _ from 'lodash';\r\n\r\nclass PostList extends Component {\r\n\r\n    state = {\r\n        posts: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const posts = getAllPosts();\r\n        this.setState({ posts }, () => console.log(\"component loaded!\"));\r\n    }\r\n\r\n    showAdvertise = () => {\r\n        for(let i in [1,2,3]){\r\n            return <Advertise id={i} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { posts } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col sm={12} md={8}>\r\n                        <h3> All Post </h3>\r\n                        <hr />\r\n                        { !_.isEmpty(posts) && Object.keys(posts).map((post) => {\r\n                        return (\r\n                            <Post key={post} post={posts[post]} />\r\n                        )\r\n                        }) }\r\n\r\n                        { _.isEmpty(posts) && <p> Dont have any posts yet. </p> }\r\n\r\n                    </Col>\r\n                    <Col sm={12} md={4}>\r\n                        <Container className=\"py-5\">\r\n                            <h4> Advertise </h4>\r\n                            <hr />\r\n                            <Advertise />\r\n                            <br />\r\n                            <Advertise />\r\n                            <br />\r\n                            <Advertise />\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PostList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\n\r\nconst Home = ({ user }) => {\r\n    return (\r\n        <Jumbotron className=\"text-center\">\r\n            <h1> Welcome { !_.isEmpty(user) ? user.name : \"to Post's App\"} </h1>\r\n            <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean blandit malesuada massa, et varius turpis ultrices sit amet. Nulla consequat justo a lorem ornare, ac tempor nunc pellentesque.  </p>\r\n            <hr />\r\n            <div>\r\n                { _.isEmpty(user) && <React.Fragment>\r\n                <Link to=\"/posts\" className=\"btn btn-primary mr-3\" variant=\"primary\"> Explore Posts </Link>\r\n                <Link to=\"/login\" className=\"btn btn-outline-primary\" > Login Here </Link>\r\n                </React.Fragment> }\r\n                { !_.isEmpty(user) && <React.Fragment>\r\n                <Link to=\"/dashboard\" className=\"btn btn-primary mr-3\" variant=\"primary\"> Dashboard </Link>\r\n                </React.Fragment> }\r\n            </div>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst Appbar =  ({ user }) => {\r\n        \r\n        return (\r\n            <Navbar collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n            <NavLink className=\"navbar-brand\" to=\"/\">POSTAPP</NavLink>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\r\n                    <NavLink className=\"nav-link\" to=\"/posts\">Posts</NavLink>\r\n                    { _.isEmpty(user) &&  <React.Fragment>\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                            <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\r\n                        </React.Fragment>\r\n                    }\r\n                    { !_.isEmpty(user) && \r\n                    <React.Fragment>\r\n                        <NavDropdown title={user.name} id=\"basic-nav-dropdown\">\r\n                            <NavLink className=\"dropdown-item\" to=\"/profile\">Dashboard</NavLink>\r\n                            <NavDropdown.Divider />\r\n                            <NavLink className=\"dropdown-item\" to=\"/logout\">Logout</NavLink>\r\n                        </NavDropdown>\r\n                    </React.Fragment>\r\n                    }\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Container>    \r\n            </Navbar>\r\n        )\r\n}\r\n\r\nexport default Appbar;","import { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\nexport default class CustomForm extends Component {\r\n    state = {\r\n        data: {},\r\n        errors: {}\r\n    }\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const { error } = Joi.validate(this.state.data, this.schema, options);\r\n        if(!error) return null;\r\n        \r\n        const errors = {...this.state.errors};\r\n        for ( let item of error.details ) errors[item.path[0]] = item.message\r\n\r\n        return errors;\r\n\r\n    }\r\n\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        if (errors){\r\n            this.setState({ errors: errors || {} } , () => console.log(this.state.errors));\r\n            return;\r\n        } \r\n    \r\n        \r\n        this.doSubmit();\r\n    }\r\n\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProperty(input);\r\n\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;\r\n        this.setState({\r\n            data,\r\n            errors\r\n        });\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst Input = ({ name, lable, error, type, as, ...rest }) => {\r\n    return (\r\n        <Form.Group controlId={name}>\r\n            <Form.Label>{lable}</Form.Label>\r\n            <Form.Control type={type} name={name} as={as || \"input\"} {...rest} />\r\n            <Form.Text className=\"text-danger\">\r\n                {error && error}\r\n            </Form.Text>\r\n        </Form.Group>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react'\r\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport Joi from 'joi-browser';\r\nimport { Link } from 'react-router-dom';\r\nimport CustomForm from './common/form';\r\nimport Input from './common/input';\r\nimport { login } from '../utils/auth';\r\n\r\nexport default class LoginForm extends CustomForm {\r\n\r\n\r\n    state = {\r\n        data: {\r\n            email: \"\",\r\n            password: \"\"\r\n        },\r\n        errors: {}\r\n    }\r\n\r\n    schema = {\r\n        email: Joi.string().email().label(\"Email\").required(),\r\n        password: Joi.string().min(3).max(50).label(\"Password\").required()\r\n    }\r\n\r\n    doSubmit = () => {\r\n        const result = login(this.state.data);\r\n        if (result) { \r\n            console.log(\"Submitted\", this.state.errors , \"result\" , result);\r\n            window.location = \"/postsapp/profile\" \r\n        }\r\n        else {\r\n            const errors = {...this.state.errors};\r\n            errors['email'] = \"Email does not exists\";\r\n            this.setState({ errors });\r\n            console.log(\"error\", this.state.errors);\r\n        }\r\n        console.log(\"Submitted\", this.state);\r\n    }\r\n\r\n    render() {\r\n        const { errors, data } = this.state;\r\n        return (\r\n            <Row>\r\n                <Col md={{ span: 8, offset: 2 }} sm={12}>\r\n                    <Card>\r\n                        <Card.Header as=\"h5\"> Login Form </Card.Header>\r\n                        <Card.Body>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Input\r\n                                    onChange={this.handleChange}\r\n                                    name=\"email\" lable=\"Email Address\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email address\"\r\n                                    error={errors.email}\r\n                                    value={data.username}\r\n                                />\r\n                                <Input\r\n                                    onChange={this.handleChange}\r\n                                    name=\"password\" lable=\"Password\"\r\n                                    placeholder=\"Enter password\"\r\n                                    type=\"password\"\r\n                                    error={errors.password}\r\n                                />\r\n                                <Button variant=\"primary\" disabled={this.validate()} type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            New here ? <Link to=\"/register\"> Register Now </Link>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\r\nimport { Link} from 'react-router-dom';\r\n\r\nimport CustomForm from './common/form';\r\nimport Input from './common/input';\r\nimport { register } from '../utils/auth';\r\n\r\nexport default class RegisterForm extends CustomForm{\r\n    state = {\r\n        data : {\r\n            email : \"\",\r\n            name : \"\",\r\n            password : \"\"\r\n        },\r\n        errors : {}\r\n    };\r\n\r\n    schema = {\r\n        email : Joi.string().email().required(),\r\n        name : Joi.string().min(3).max(120).required(),\r\n        password : Joi.string().regex(/[a-zA-Z0-9]{3,30}/).required()\r\n    }\r\n\r\n    doSubmit = () => {\r\n        register(this.state.data);\r\n        this.props.history.replace('/login');\r\n        \r\n    }\r\n\r\n    render(){\r\n        const { errors, data } = this.state;\r\n        return (\r\n            <Row>\r\n                <Col md={{ span: 8, offset: 2 }} sm={12}>\r\n                    <Card>\r\n                        <Card.Header as=\"h5\"> Register Form </Card.Header>\r\n                        <Card.Body>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <Input\r\n                                    onChange={this.handleChange}\r\n                                    name=\"email\" lable=\"Email Address\"\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter email address\"\r\n                                    error={errors.email}\r\n                                    value={data.username}\r\n                                />\r\n                                <Input \r\n                                    onChange={this.handleChange}\r\n                                    name = \"name\"\r\n                                    lable=\"Name\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter your full name\"\r\n                                    error={errors.name}\r\n                                    value={data.name}\r\n                                />\r\n                                <Input\r\n                                    onChange={this.handleChange}\r\n                                    name=\"password\" lable=\"Password\"\r\n                                    placeholder=\"Enter password\"\r\n                                    type=\"password\"\r\n                                    error={errors.password}\r\n                                    value={data.password}\r\n                                />\r\n                                <Button variant=\"primary\" disabled={this.validate()} type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            Already have an account ? <Link to=\"/login\"> Login here </Link>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}","import { Component } from 'react';\r\nimport { logout } from '../utils/auth';\r\n\r\nclass Logout extends Component{\r\n    \r\n    componentDidMount(){\r\n        logout();\r\n        window.location = \"/postsapp/\"\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { Row, Col, Button, ButtonToolbar, Modal, Container, Form } from 'react-bootstrap';\r\nimport Joi from 'joi-browser';\r\nimport _ from 'lodash';\r\n\r\nimport  Input  from './common/input';\r\nimport CustomForm from './common/form';\r\nimport Post from './common/post';\r\n\r\nimport { addPost, getUserPosts } from '../utils/post'; \r\nimport { getLoggedUser } from '../utils/auth';  \r\n\r\n\r\nexport default class Dashboard extends CustomForm {\r\n\r\n    state = {\r\n        showModal : false,\r\n        user : {},\r\n        data : {\r\n            title : \"\",\r\n            body : \"\"\r\n        },\r\n        errors : {},\r\n        posts : {}\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        const posts = getUserPosts();\r\n        const user = getLoggedUser() || {};\r\n        this.setState({\r\n            user,\r\n            posts\r\n        });\r\n    }\r\n\r\n    schema = {\r\n        title : Joi.string().max(255).label(\"Title\").required(),\r\n        body : Joi.string().min(10).max(1024).label(\"Body\").required()\r\n    }\r\n\r\n    doSubmit = () => {\r\n        const post = {...this.state.data};\r\n        post['user'] = this.state.user;\r\n        post['created_at'] = Date.now();    \r\n        addPost(post);\r\n        const posts = getUserPosts();\r\n\r\n        this.setState({\r\n            posts\r\n        });\r\n\r\n        this.showModal();\r\n    }\r\n\r\n\r\n   renderModal = () => {\r\n       const { showModal,  errors} = this.state;\r\n        return (\r\n          <Modal\r\n            show={showModal}\r\n            size=\"lg\"\r\n            onHide={this.showModal}\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Create Post\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Input \r\n                        name=\"title\"\r\n                        lable=\"Title\"\r\n                        placeholder = \"Enter title here\"\r\n                        onChange={this.handleChange}\r\n                        error={errors.title}\r\n                        type=\"text\"\r\n                    />\r\n                    <Input \r\n                        name=\"body\"\r\n                        as=\"textarea\"\r\n                        lable=\"Body\"\r\n                        placeholder = \"Post message\"\r\n                        onChange={this.handleChange}\r\n                        error={errors.body}\r\n                        type=\"text\"\r\n                    />\r\n                    <Button type=\"submit\" block> Create </Button>\r\n                </Form>\r\n              </Container>\r\n            </Modal.Body>\r\n          </Modal>\r\n        );\r\n      }\r\n\r\n     showModal = () => {\r\n         const showModal = !this.state.showModal;\r\n        this.setState( {\r\n            showModal\r\n        });\r\n     } \r\n\r\n    render() {\r\n        const { user, posts  } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Row>\r\n                    <Col sm={12} md={10}>\r\n                        <h4> Hello, {user.name}! </h4>\r\n                    </Col>\r\n                    <Col sm={12} md={2}>\r\n                    <ButtonToolbar>\r\n                        <Button size=\"sm\" variant=\"primary\" onClick={this.showModal}>\r\n                        New Post\r\n                        </Button>\r\n                \r\n                        {this.renderModal()}\r\n                    </ButtonToolbar>\r\n                    </Col>\r\n                </Row>\r\n                <hr />\r\n                { _.isEmpty(posts) && <p className=\"text-center\"     > You dont have any post!, Create one now. </p> }\r\n\r\n                { Object.keys(posts).map((post) => {\r\n                        return (\r\n                            <Post key={post} post={posts[post]} />\r\n                        )\r\n                    }) }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getLoggedUser } from '../../utils/auth';\r\nimport _ from 'lodash';\r\n\r\nexport default function ProtectedRoute({ component : Component , render , showOnUser, ...rest }) {\r\n    \r\n    const isUser = _.isEmpty(getLoggedUser());\r\n    \r\n    if (showOnUser){\r\n\r\n    return (\r\n            <Route \r\n                {...rest}\r\n                render={ props => {\r\n                    if ( isUser ) return <Redirect to=\"/login\" />;\r\n                    return Component ?  <Component {...props} /> : render(props);\r\n                } }\r\n            />\r\n\r\n        \r\n    )\r\n\r\n    }\r\n    else {\r\n        return (\r\n        <Route \r\n            {...rest}\r\n            render={ props => {\r\n                if ( !isUser ) return <Redirect to=\"/\" />;\r\n                return Component ?  <Component {...props} /> : render(props);\r\n            } }\r\n        />\r\n    )\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\n\n\nimport { Route, Switch } from 'react-router-dom';\nimport PostList from './components/post_lists';\nimport Home from './components/home';\nimport Appbar from \"./components/appbar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from './components/logout';\nimport Dashboard from './components/dashboard';\n\nimport ProtectedRoute from './components/common/protectedRoute';\n\nimport { getLoggedUser } from './utils/auth.js';\n\nclass App extends Component {\n\n  state = {\n    user : {}\n  };\n\n  componentDidMount(){\n\n    const user = getLoggedUser();\n\n    this.setState( { user } );\n  };\n\n\n  render(){\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <Appbar user={user} />\n        <Container className=\"pt-3\">\n          <Switch>\n            <ProtectedRoute showOnUser={true} path='/logout' component={Logout} />\n            <ProtectedRoute showOnUser={true} path='/profile' component={Dashboard} />\n            <ProtectedRoute showOnUser={false} path='/register' component={RegisterForm} />\n            <ProtectedRoute showOnUser={false} path='/login' component={LoginForm} />\n            <Route path='/posts' component={PostList} />\n            <Route path='/' exact render={(props) => <Home user={user} {...props} /> }/>\n          </Switch>\n        </Container>\n      </React.Fragment>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render( <BrowserRouter basename=\"/postsapp/\"><App /></BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}